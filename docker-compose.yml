version: '3.8'

services:
  api-gateway:
    container_name: api-gateway
    image: h1r0ku/api-gateway:latest
    ports:
      - "8181:8080"
    expose:
      - "8080"
    depends_on:
      - discovery-server
    environment:
      - spring_profiles_active=docker

  discovery-server:
    container_name: discovery-server
    image: h1r0ku/discovery-server:latest
    ports:
      - "8762:8761"
    environment:
      - spring_profiles_active=docker

  smngs-service:
    container_name: smngs-service
    image: h1r0ku/smngs-service:latest
    depends_on:
      - postgres-smngs
      - discovery-server
      - api-gateway
    environment:
      - spring_profiles_active=docker

  library-service:
    container_name: library-service
    image: h1r0ku/library-service:latest
    depends_on:
      - postgres-library
      - discovery-server
      - api-gateway
    environment:
      - spring_profiles_active=docker

  file-service:
    container_name: file-service
    image: h1r0ku/file-service:latest
    depends_on:
      - discovery-server
      - api-gateway
      - smngs-service
      - library-service
    environment:
      - spring_profiles_active=docker

  client:
    container_name: client
    image: h1r0ku/smngs-client
    ports:
      - "3000:3000"
    depends_on:
      - smngs-service
      - library-service
      - file-service
      - discovery-server
      - api-gateway

  postgres-smngs:
    container_name: postgres-smngs
    image: postgres
    environment:
      - POSTGRES_DB=smngs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - PGDATA=/data/postgres
    volumes:
      - postgres-smngs:/data/postgres
    ports:
      - "5432:5432"
    restart: always

  postgres-library:
    container_name: postgres-library
    image: postgres
    environment:
      - POSTGRES_DB=smngs_library
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - PGDATA=/data/postgres
    volumes:
      - postgres-library:/data/postgres
    ports:
      - "5431:5431"
    command: -p 5431
    expose:
      - "5431"
    restart: always

  ## Prometheus
  prometheus:
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - library-service
      - smngs-service
      - file-service

  grafana:
    image: grafana/grafana-oss:9.3.2
    container_name: grafana
    restart: always
    ports:
      - "8082:8082"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password


volumes:
  postgres-library:
  postgres-smngs: